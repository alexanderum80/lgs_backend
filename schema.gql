# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type RolesEntity {
  IdRole: Int!
  Role: String!
}

type UsersEntity {
  Id: Float
  UserName: String!
  Name: String!
  LastName: String!
  Psw: String!
  Enabled: Boolean!
  StartDate: DateTime!
  Deleted: Boolean!
  UserRoles: [UsersRolesEntity!]
  Token: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type UsersRolesEntity {
  IdUser: Int!
  IdRole: Int!
  Users: UsersEntity!
  Roles: RolesEntity!
}

type OperationsEntity {
  IdOperation: Int!
  OperationName: String!
  Enabled: Boolean!
}

type OperationsREntity {
  IdOperation: Int!
  Consecutive: Int!
  IdOperationType: Int!
  IdTable: Int!
  IdPlayer: Int!
  IdUser: Int!
  Date: DateTime
  Finished: Boolean
  Cancelled: Boolean
  OperationsD: [OperationsDEntity!]
}

type OperationsDEntity {
  IdOperationDetail: Int!
  IdOperation: Int!
  IdPayment: Int!
  Denomination: Float!
  IdInstrument: Int!
  Rate: Float!
  Qty: Float!
  OperationsR: OperationsREntity!
}

type OperationsRView {
  IdOperation: Float!
  IdOperationType: Float!
  IdTable: Float!
  Table: String!
  UserName: String!
  Player: String!
  IdPlayer: Float!
  IdUser: Float!
  Date: DateTime!
  Finished: Boolean!
  Cancelled: Boolean!
  AmountIn: Float!
  AmountOut: Float!
  Bonus: Float!
}

type PlayersEntity {
  IdPlayer: Int!
  Name: String!
  LastName: String!
  StartDate: DateTime!
  Personal_Id: String
  Passport_Number: String
  Note: String
  CellPhone: String
  Enabled: Boolean!
  IdCountry: Int
  Deleted: Boolean!
  DateOfBirth: DateTime
  Status: Int!
  StatusInfo: OperationsEntity!
}

type CountriesEntity {
  IdCountry: Int!
  Name: String!
  Enabled: Boolean!
}

type CoinEntity {
  IdCoin: Int!
  Coin: String!
  Rate: Float!
  Enabled: Boolean!
}

type SessionsEntity {
  IdSession: Int!
  OpenDate: DateTime!
  CloseDate: DateTime!
}

type CasinoInfoEntity {
  Id: Float!
  Name: String!
  Address: String!
  Phone: String
  IdCountry: Float!
  IdCity: Float!
  IdState: Float!
  OpeningDate: DateTime!
}

type CitiesEntity {
  IdCity: Int!
  City: String!
  IdCountry: Float!
  Country: CountriesEntity!
  Enabled: Boolean!
}

type TablesGameEntity {
  IdGame: Int!
  Name: String!
  StartAmount: Float!
}

type PaymentsEntity {
  IdPayment: Int!
  Description: String!
  Denomination: Float!
  IdPayInstr: Int!
  IdCoin: Int!
  Coin: CoinEntity!
  Enabled: Boolean!
}

type PaymentsView {
  IdPayment: Float!
  Description: String!
  Denomination: Float!
  IdPayInstr: Float!
  IdCoin: Float!
  Enabled: Boolean!
  PayInstrument: String!
  Coin: String!
  Rate: Float!
  PaymentName: String!
}

type TablesEntity {
  IdTable: Int!
  Description: String!
  IdGame: Int!
  Enabled: Boolean!
  TableGame: TablesGameEntity!
  Game: String
  InitValues: [TablesInitValuesEntity!]
  TotalInitValues: Float
}

type TablesInitValuesEntity {
  IdInitValue: Int!
  IdTable: Int!
  IdPayment: Int!
  Payment: PaymentsEntity!
  Qty: Int!
  IdUser: Int!
  Date: DateTime!
  Table: TablesEntity!
}

type CageEntity {
  IdCageOp: Int!
  IdTable: Int!
  IdPlayer: Int!
  IdOperationType: Int!
  IdOperation: Int!
  IdPayment: Int!
  Date: DateTime!
  IdUser: Int!
  Amount: Float!
}

type PaymentInstrumentsEntity {
  IdPayInstr: Int!
  Name: String!
}

type PlayerStatusView {
  IdPlayer: Int!
  Name: String!
  PayInstrument: String!
  date: DateTime!
  ini: Float!
  balance: Float!
  winlost: Float!
}

type PlayerStatusCheckView {
  IdPlayer: Int!
  Name: String!
  PayInstrument: String!
  date: DateTime!
  ini: Float!
  ckeck: Float!
  winlost: Float!
}

type PlayerTrackingView {
  IdTracking: Float!
  IdTable: Float!
  Description: String!
  IdPlayer: Float!
  Name: String!
  IdOperations: Float!
  IdOperationType: Float!
  OperationName: String!
  Date: DateTime!
  IdPayment: Float
  PayDescription: String
  PayInstrument: String
  Denomination: Float
  Qty: Float
  Amount: Float
}

type FinalPlayerSessions {
  IdSession: Int!
  OpenDate: DateTime!
  IdPlayer: Int!
  Player: String!
  Result: Float!
}

type DropResultsView {
  IdSession: Float!
  IdTable: Float!
  Table: String!
  Date: DateTime!
  Time: String!
  Amount: Float!
}

type MasterTrackingView {
  IdSession: Float!
  OpenDate: DateTime
  CloseDate: DateTime
  IdPlayer: Float!
  PlayerName: String!
  TimeIn: DateTime!
  TimeOut: DateTime
  SRD: Float!
  USD: Float!
  EUR: Float!
  TotalSRD: Float!
  TotalOutSRD: Float!
  WinLoss: Float!
  TotalCreditsSRD: Float!
}

type CreditRequestEntity {
  IdCredit: Int!
  Date: DateTime!
  IdPlayer: Float!
  Player: PlayersEntity!
  IdTable: Float!
  Amount: Float!
  Passed: Boolean!
  Cancelled: Boolean!
  IdSession: Float!
  IdOperation: Float!
  IdUser: Float!
}

type Query {
  authenticateUser(passw: String!, user: String!): UsersEntity!
  logout: Boolean!
  refreshToken(passw: String!, user: String!): UsersEntity!
  getAllUsers: [UsersEntity!]!
  getUserById(id: Int!): UsersEntity!
  getUserByName(name: String!): UsersEntity!
  getUsersRoles: [UsersRolesEntity!]!
  getUserRoles(idUser: Int!): [UsersRolesEntity!]!
  getRoles: [RolesEntity!]!
  getRole(id: Int!): RolesEntity!
  getPlayers: [PlayersEntity!]!
  getPlayer(id: Int!): PlayersEntity!
  getCountries: [CountriesEntity!]!
  getCountry(id: Int!): CountriesEntity!
  getCoins: [CoinEntity!]!
  getCoin(id: Int!): CoinEntity!
  getCasinoInfo: CasinoInfoEntity!
  getCasinoState: Int!
  getSessions: [SessionsEntity!]!
  getSession(id: Int!): SessionsEntity!
  getCities: [CitiesEntity!]!
  getCitiesByCountry(idCountry: Int!): [CitiesEntity!]!
  getCity(id: Int!): CitiesEntity!
  getTablesGame: [TablesGameEntity!]!
  getTableGame(id: Int!): TablesGameEntity!
  getTables: [TablesEntity!]!
  getTablesWithInitValues: [TablesEntity!]!
  getTableInitValues(idTable: Int!): [TablesInitValuesEntity!]!
  getTable(id: Int!): TablesEntity!
  getOperations: [OperationsREntity!]!
  getOperationsToday(idState: Int!): [OperationsRView!]!
  getOperation(id: Int!): OperationsREntity!
  getOperationDetails(id: Int!): [OperationsDEntity!]!
  getCages: [CageEntity!]!
  getCage(id: Int!): CageEntity!
  getPaymentInstruments: [PaymentInstrumentsEntity!]!
  getPaymentInstrument(id: Int!): PaymentInstrumentsEntity!
  getPayments: [PaymentsView!]!
  getPayment(id: Int!): PaymentsEntity!
  currentPlayersStatus(idPlayer: Int): [PlayerStatusView!]!
  currentPlayersStatusCheck(idPlayer: Int): [PlayerStatusCheckView!]!
  masterTracking(idPlayer: Int, finalSession: Int!, initSession: Int!): [MasterTrackingView!]!
  currentPlayersTracking(idPlayer: Int): [PlayerTrackingView!]!
  finalPlayerSessions(idPlayer: Int, finalSession: Int!, initSession: Int!): [FinalPlayerSessions!]!
  dropResults(finalSession: Int!, initSession: Int!): [DropResultsView!]!
  creditsRequest: [CreditRequestEntity!]!
  pendingCreditsRequest: [CreditRequestEntity!]!
  creditRequest(id: Int!): CreditRequestEntity!
}

type Mutation {
  createUser(userInfo: UserInput!): UsersEntity!
  updateUser(userInfo: UserInput!): UsersEntity!
  deleteUser(IDs: [Int!]!): Float!
  recoverUser(id: Int!): Float!
  createUsersRole(usersRolesInput: UsersRolesInput!): UsersRolesEntity!
  removeUsersRole(id: Int!): UsersRolesEntity!
  createRole(createRoleInput: RoleInput!): RolesEntity!
  updateRole(updateRoleInput: RoleInput!): RolesEntity!
  deleteRole(id: Int!): RolesEntity!
  createPlayer(playerInput: PlayerInput!): PlayersEntity!
  updatePlayer(playerInput: PlayerInput!): PlayersEntity!
  deletePlayer(IDs: [Int!]!): Float!
  recoverPlayer(id: Int!): Float!
  createCountry(countryInput: CountryInput!): CountriesEntity!
  updateCountry(countryInput: CountryInput!): CountriesEntity!
  deleteCountry(IDs: [Int!]!): Int!
  createCoin(coinInput: CoinInput!): CoinEntity!
  updateCoin(coinInput: CoinInput!): CoinEntity!
  deleteCoin(IDs: [Int!]!): Int!
  saveCasinoInfo(casinoInfoInput: CasinoInfoInput!): CasinoInfoEntity!
  createCity(cityInput: CityInput!): CitiesEntity!
  updateCity(cityInput: CityInput!): CitiesEntity!
  removeCity(IDS: [Int!]!): Int!
  createTableGame(tableGameInput: TableGameInput!): TablesGameEntity!
  updateTableGame(tableGameInput: TableGameInput!): TablesGameEntity!
  deleteTableGame(IDs: [Int!]!): Float!
  createTable(tableInput: TableInput!): TablesEntity!
  updateTable(tableInput: TableInput!): TablesEntity!
  deleteTable(IDs: [Int!]!): Float!
  createOperation(operationInput: OperationInput!): OperationsREntity!
  updateOperation(operationInput: OperationInput!): OperationsREntity!
  finishOperation(idOperation: Int!): Int!
  cancelOperation(idOperation: Int!): Int!
  deleteOperation(IDs: [Int!]!): Float!
  finishInitialization: Boolean!
  finishClosing: Boolean!
  createCage(createCageInput: CageInput!): CageEntity!
  removeCage(idOperation: Int!): Float!
  createPayment(paymentInput: PaymentInput!): PaymentsEntity!
  updatePayment(paymentInput: PaymentInput!): PaymentsEntity!
  removePayment(IDs: [Int!]!): Int!
  approveCreditRequest(idCredit: Int!): Int!
  denyCreditRequest(idCredit: Int!): Int!
}

input UserInput {
  Id: Float!
  UserName: String!
  Name: String!
  LastName: String!
  Psw: String!
  Role: [Int!]!
  Enabled: Boolean!
}

input UsersRolesInput {
  IdUser: Int!
  IdRole: Int!
}

input RoleInput {
  IdRole: Int!
  Role: String!
}

input PlayerInput {
  IdPlayer: Float!
  Name: String!
  LastName: String!
  StartDate: DateTime
  Personal_Id: String!
  Passport_Number: String!
  Note: String!
  CellPhone: String!
  Enabled: Boolean!
  IdCountry: Int
  DateOfBirth: DateTime!
}

input CountryInput {
  IdCountry: Int!
  Name: String!
  Enabled: Boolean!
}

input CoinInput {
  IdCoin: Int!
  Coin: String!
  Rate: Float!
  Enabled: Boolean!
}

input CasinoInfoInput {
  Id: Float!
  Name: String!
  Address: String!
  Phone: String
  IdCountry: Float!
  IdCity: Float!
}

input CityInput {
  IdCity: Int!
  City: String!
  IdCountry: Int!
  Enabled: Boolean!
}

input TableGameInput {
  IdGame: Int!
  Name: String!
  StartAmount: Float!
}

input TableInput {
  Table: Table!
  InitValues: [TablesInitValues!]!
}

input Table {
  IdTable: Int!
  Description: String!
  IdGame: Int!
  Enabled: Boolean!
}

input TablesInitValues {
  IdInitValue: Int!
  IdTable: Int!
  IdPayment: Int!
  Qty: Int!
}

input OperationInput {
  OperationR: OperationRInput!
  OperationD: [OperationDInput!]!
}

input OperationRInput {
  IdOperation: Int
  Consecutive: Int
  IdOperationType: Int!
  IdTable: Int!
  IdPlayer: Int!
  IdUser: Int
  Date: DateTime
  Finished: Boolean
  Cancelled: Boolean
}

input OperationDInput {
  IdOperationDetail: Int
  IdOperation: Int!
  IdPayment: Int!
  Denomination: Float!
  IdInstrument: Int!
  Rate: Float!
  Qty: Float!
}

input CageInput {
  IdCageOp: Int
  IdTable: Int!
  IdPlayer: Int!
  IdOperationType: Int!
  IdOperation: Int!
  IdPayment: Int!
  Date: DateTime!
  IdUser: Int!
  Amount: Float!
}

input PaymentInput {
  IdPayment: Int!
  Description: String!
  Denomination: Float!
  IdPayInstr: Int!
  IdCoin: Int!
  Enabled: Boolean!
}
